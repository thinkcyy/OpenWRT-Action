name: LeanWRT-EA8500

on:
   workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id

    steps:

    - name: Show system
      run: |
        echo -e "Total CPU cores\t: $(nproc)"
        cat /proc/cpuinfo | grep 'model name'
        ulimit -a
        echo "ROUTER_MODEL=EA8500" >> $GITHUB_ENV

    - name: Init build dependencies
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo swapoff -a
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install aria2 rename
        sudo -E wget -P /usr/local/sbin/ https://github.com/HiGarfield/lede-17.01.4-Mod/raw/master/.github/backup/apt-fast
        sudo -E chmod -R 755 /usr/local/sbin/apt-fast
        sudo -E apt-fast -y -qq install zstd dwarves llvm clang lldb lld build-essential rsync asciidoc binutils bzip2 gawk gettext git libncurses5-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc-s1 libc6-dev-i386 subversion flex uglifyjs gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libreadline-dev libglib2.0-dev xmlto qemu-utils upx-ucl libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget ccache curl swig coreutils vim nano python3 python3-pip python3-ply haveged lrzsz scons libpython3-dev
        sudo -E pip3 install pyelftools pylibfdt
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo -E git config --global user.name 'GitHub Actions' && git config --global user.email 'noreply@github.com'
        sudo -E git config --global core.abbrev auto
        sudo timedatectl set-timezone "Asia/Shanghai"
        df -h
                
    - name: Optimize Disk Space
      uses: hugoalh/disk-space-optimizer-ghaction@v0.8.0
      with:
        operate_sudo: "True"
        general_include: ".+"
        general_exclude: |-
          ^GCC$
          ^G\+\+$
          Clang
          LLVM
        docker_include: ".+"
        docker_prune: "True"
        docker_clean: "True"
        apt_prune: "True"
        apt_clean: "True"
        homebrew_prune: "True"
        homebrew_clean: "True"
        npm_prune: "True"
        npm_clean: "True"
        os_swap: "True"

    - name: Maximize build space
      uses: easimon/maximize-build-space@master
      with:
        swap-size-mb: 512
        temp-reserve-mb: 100
        root-reserve-mb: 1280
        remove-dotnet: 'true'
        remove-android: 'true'
        remove-haskell: 'true'
        remove-codeql: 'true'
                
    - name: Checkout
      uses: actions/checkout@main

    - name: Clone Firmware repository
      uses: actions/checkout@main
      with:
         repository: thinkcyy/OpenWRT-23.05.0-NSS
         #ref: master 
         path: ./openwrt
         
    - name: tree
      run: |
         echo "当前工作目录"
         pwd
         tree -L 3      
         
    - name: prepare
      #working-directory: ./EA8500-OpenWrt    
      run: |
         chmod +x ./23.05-NSS/scripts/*.sh
         bash ./23.05-NSS/scripts/prepare-${{ env.ROUTER_MODEL }}.sh
      
    - name: compile
      #working-directory: ./EA8500-OpenWrt
      run: |   
        bash ./23.05-NSS/scripts/compile.sh
        
    - name: generate tag
      run: |
        #LAST_COMMIT_HASH=$(curl -s "https://api.github.com/repos/thinkcyy/openwrt-config/commits/main" | grep -m 1 '"sha":' | cut -d '"' -f 4 | cut -c 1-7)
        #echo "LAST_COMMIT_HASH=${LAST_COMMIT_HASH}" >> $GITHUB_ENV
        tag_name=$(date +%Y%m%d-%H%M)
        echo "tag_name=${tag_name}" >>$GITHUB_ENV
        
    - name: Organize files
      #working-directory: ./lede
      id: organize
      run: |
        rm -rf ./artifact/
        mkdir -p ./artifact/
        cp -rf $(find ./openwrt/bin/targets/ -type f -name "*sysupgrade*") ./artifact/
        cp -rf $(find ./openwrt/bin/targets/ -type f -name "*.buildinfo") ./artifact/
        cd ./artifact/
        rename 's/sysupgrade.bin/sysupgrade-sayh_${{ env.tag_name }}.bin/' *
        echo "当前工作目录"
        pwd
        #tree -L 2  ../
        #echo "显示编译配置config.buildinfo"
        #cat config.buildinfo
        
    - name: Upload artifact
      uses: actions/upload-artifact@main
      with:
        name: OpenWrt-${{ env.ROUTER_MODEL }}_${{ env.tag_name }}
        path: ./artifact/
