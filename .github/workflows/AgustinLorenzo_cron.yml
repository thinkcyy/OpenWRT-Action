name: AgustinLorenzo-cron

on:
   workflow_dispatch:
   schedule:
    - cron: '0 20 * * *'

jobs:
  check:
    outputs:
      CONTINUE: ${{ steps.early.outputs.CONTINUE }}
      BRANCH: ${{ steps.early.outputs.BRANCH }}
    runs-on: ubuntu-22.04
    steps:
      
    - id: early
      name: Early exit
      env:
        OP_REPO: AgustinLorenzo/openwrt
        REPO_BRANCH: main_nss
      run: | 
        git config --global log.date iso-strict-local
        echo 下载源仓库
        git clone https://github.com/$OP_REPO $([[ $REPO_BRANCH != 'n' ]] && echo "-b $REPO_BRANCH --single-branch")  ./openwrt
        #echo 获取最新提交日期
        cd ./openwrt
        #LAST=$(git log -1 --format="%cd" --date=format:"%Y-%m-%d %H:%M:%S")
        
        # 获取最新两个TAG的commit
        # LAST_TAG=$(git tag --sort=-v:refname | head -n 1)        
        # LAST_2_TAG_COMMIT=$(git rev-list --tags --max-count=2)
        # LAST_TAG_COMMIT=$(git rev-list --tags --since=$(date -d "yesterday" +%Y-%m-%d) --max-count=2)
        
        # 获取最新的非mesh的tag
        NON_MESH_TAG=$(git tag -l --sort=-creatordate | grep -v mesh | head -n 1)
        NON_MESH_TAG_HASH=$(git show-ref --tags $NON_MESH_TAG --hash)
        LAST_TAG_DATE=$(git log --pretty=format:"%cd" --date=format:"%Y-%m-%d %H:%M:%S" $NON_MESH_TAG_HASH -1) 
        echo 最新的非mesh标签为$NON_MESH_TAG
        echo 对应的commit为$NON_MESH_TAG_HASH
        echo 对应的日期为$LAST_TAG_DATE

        # 选取非mesh的COMMIT
        #if [ -z $LAST_TAG_COMMIT ]
        #then
        #   echo 上日无新TAG
        #else
        #   echo 上日有新TAG，commit为：$LAST_TAG_COMMIT
        #   for i in $LAST_TAG_COMMIT
        #   do 
        #      [[ "$(git tag --points-at $i)" != "*mesh*" ]] && NON_MESH_COMMIT=$i && break
        #   done
        #fi

        # 确定非mesh的tag名称
        #LAST_TAG=$(git tag --points-at $NON_MESH_COMMIT)

        #echo 最新的非mesh的TAG为$LAST_TAG，对应的COMMIT为$NON_MESH_COMMIT
        echo "BRANCH=$NON_MESH_TAG" >> $GITHUB_OUTPUT

        #echo 判断是否24小时内更新
        #LAST_TAG_HASH=$(git rev-list --tags --max-count=1)         
        [[ `expr $(($(date +%s) - $(date +%s -d "$LAST_TAG_DATE")))` -lt 86400 ]] && (echo 24小时内有更新，继续 ; echo "CONTINUE=YES" >> $GITHUB_OUTPUT ) || echo 24小时内无更新，退出     
      
  build:
    needs: check
    if: needs.check.outputs.CONTINUE == 'YES'
    runs-on: ubuntu-22.04
    steps:
        
    - name: Initialization
      uses: thinkcyy/Action_Initialization@main
                   
    - name: Prepare
      uses: thinkcyy/Action_OpenWrt_composite@prepare
      with:           
           REPO_BRANCH: ${{ needs.check.outputs.BRANCH }}
           COMPILE_CONFIG_BASE: qualcommax_ipq807x-202506
           COMPILE_CONFIG_DIFF: "common.cust.package-1-OpenWrt_Component common.cust.package-2-luci_app common.cust.package-3-netfilter"
           #COMPILE_CONFIG_AUTOMERGE: common.cust.package
           COMPILE_CONFIG: common.cust.package-4-nss
           IMAGEBUILDER: y
           REPO_TYPE: zhKong
           OP_REPO: AgustinLorenzo/openwrt
           CUSTOM_FEEDS_SH: custom_feeds-AgustinLorenzo

    - name: Modify config
      uses: thinkcyy/Action_OpenWrt_composite@config_add
      with:
           # CONFIG_TO_ADD: ' '
           CONFIG_TO_DEL: "CONFIG_PACKAGE_kmod-nft-netdev CONFIG_PACKAGE_kmod-macvlan"
                      
    - name: Download package sources
      working-directory: ${{ github.workspace }}/runner_root/openwrt
      run: make download V=s

    - name: Build tools
      working-directory: ${{ github.workspace }}/runner_root/openwrt
      run: |
        make tools/install -j$(nproc) V=s || \
        make tools/install V=s
        
    - name: Build toolchain
      working-directory: ${{ github.workspace }}/runner_root/openwrt
      run: |
        make toolchain/install -j$(nproc) V=s || \
        make toolchain/install V=s

    - name: Build target images
      working-directory: ${{ github.workspace }}/runner_root/openwrt
      run: |
       make -i -j$(nproc) V=s || make -i V=s
       # make -j$(nproc) V=s || make V=s

    - name: Upload
      uses: thinkcyy/Action_OpenWrt_composite@release
      
    - name: Create release
      uses: ncipollo/release-action@main
      with:
        name: "[Cron]-${{ env.TAG_NAME }}"
        allowUpdates: true
        tag: ${{ env.TAG_NAME }}
        replacesArtifacts: true
        token: ${{ secrets.GITHUB_TOKEN }}
        artifacts: ./runner_root/artifact/*
